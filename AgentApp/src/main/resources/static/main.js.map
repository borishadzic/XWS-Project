{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accomodation/accomodation.component.css","webpack:///./src/app/accomodation/accomodation.component.html","webpack:///./src/app/accomodation/accomodation.component.ts","webpack:///./src/app/accomodations/accomodations.component.css","webpack:///./src/app/accomodations/accomodations.component.html","webpack:///./src/app/accomodations/accomodations.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/comment-dialog/comment-dialog.component.css","webpack:///./src/app/comment-dialog/comment-dialog.component.html","webpack:///./src/app/comment-dialog/comment-dialog.component.ts","webpack:///./src/app/messages-dialog/messages-dialog.component.css","webpack:///./src/app/messages-dialog/messages-dialog.component.html","webpack:///./src/app/messages-dialog/messages-dialog.component.ts","webpack:///./src/app/modules/material/material.module.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/new-accomodation/new-accomodation.component.css","webpack:///./src/app/new-accomodation/new-accomodation.component.html","webpack:///./src/app/new-accomodation/new-accomodation.component.ts","webpack:///./src/app/terms/terms.component.css","webpack:///./src/app/terms/terms.component.html","webpack:///./src/app/terms/terms.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sCAAsC,sBAAsB,+BAA+B,OAAO,oCAAoC,oBAAoB,OAAO,2BAA2B,0BAA0B,0BAA0B,OAAO,+BAA+B,gCAAgC,OAAO,wBAAwB,+BAA+B,OAAO,kBAAkB,sBAAsB,OAAO,C;;;;;;;;;;;ACA1a,4vCAA4vC,aAAa,mYAAmY,qBAAqB,02BAA02B,y0CAAy0C,cAAc,ihB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhzH;AACO;AACmC;AAC5C;AACE;AAOlD;IAWE,+BAAoB,EAAe,EACf,QAAqB,EACrB,IAAgB,EAChB,KAAqB,EACrB,MAAc;QAJd,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAZ3B,aAAQ,GAAG,EAAE,CAAC;IAYiB,CAAC;IAEvC,wCAAQ,GAAR;QAAA,iBAuFC;QAtFC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAExC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACjD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACjD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC7D,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrD,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACpC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrD,OAAO,EAAE,IAAI,wDAAS,CAAC,EAAE,CAAC;YAC1B,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC1C,CAAC,CAAC;QAOH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC,SAAS,CAAC,cAAI;YACtE,KAAI,CAAC,QAAQ,GAAQ,IAAI,CAAC;QAE5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9D,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,GAAC,IAAI,CAAC,EAAE,GAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACpF,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAGlB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,GAAC,KAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1E,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAIzB,IAAI,YAAY,GAAG,EAAE,CAAC;gBAEtB,KAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;oBACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBACnE,SAAS,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,OAAO,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBACzE,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBACnE,SAAS,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,OAAO,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBACzE,kBAAkB,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBAC9F,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBAC9E,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC;oBAC7D,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBAC3E,OAAO,EAAE,IAAI,wDAAS,CAAC,EAAE,CAAC;oBAC1B,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;iBAC1C,CAAC,CAAC;gBAGL,IAAI,GAAG,GAAa,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;gBAC9D,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;oBACvC,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;wBAC7D,IAAI,mBAAmB,GAAG,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;wBAClE,IAAI,WAAW,GAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClC,EAAE,EAAC,WAAW,CAAC,EAAE,KAAK,mBAAmB,CAAC,EAAE,CAAC,EAAC;4BAC5C,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;4BACxB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;wBACnC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;oBACpC,IAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;wBAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,yDAAU,CAAC,QAAQ,CAAC;wBACzE,SAAS,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAC,yDAAU,CAAC,QAAQ,CAAC;wBACrE,OAAO,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAC,yDAAU,CAAC,QAAQ,CAAC;wBACjE,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;wBACnD,IAAI,EAAG,IAAI,0DAAW,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBACxC,SAAS,EAAE,IAAI,0DAAW,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBAClD,CAAC,CAAC;oBACS,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClD,CAAC;YAED,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IAGD,yCAAS,GAAT;QACE,4DAA4D;QAC5D,oDAAoD;QAEpD,IAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACtD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClD,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAClC,IAAI,EAAG,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC5B,SAAS,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SAClC,CAAC,CAAC;QACS,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,6BAA6B;IAE7B,0IAA0I;IAG1I,IAAI;IAEJ,+BAA+B;IAE/B,2IAA2I;IAG3I,IAAI;IAEJ,8CAAc,GAAd,UAAe,EAAO,EAAC,KAAU;QAC/B,IAAI,GAAG,GAAa,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAC9D,EAAE,EAAC,KAAK,CAAC,OAAO,CAAC,EAAC;YAChB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACf,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,KAAK,GAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC1B,GAAG,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAED,wCAAQ,GAAR;QAAA,iBA2BC;QA1BA,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,GAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;iBAC5E,SAAS,CACR,UAAC,IAAI;gBAEH,IAAM,EAAE,GAAS,IAAK,CAAC,EAAE,CAAC;gBAE1B,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;gBAChC,EAAE,EAAC,KAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAC;oBACxB,GAAG,CAAC,CAAgB,UAAW,EAAX,UAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;wBAA1B,IAAM,KAAK;wBACd,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;qBAC7C;oBAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAsC,GAAG,EAAE,EAAE,QAAQ,CAAC;yBAClE,SAAS,CAAC;wBACT,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qCAAqC,EAAE,OAAO,EAAE;4BACjE,QAAQ,EAAE,IAAI;yBACf,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC,CACF,CAAC;QACJ,CAAC;IAEH,CAAC;IAGD,6CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACnC,CAAC;IAlLU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAYwB,0DAAW;YACL,6DAAW;YACf,+DAAU;YACT,8DAAc;YACb,sDAAM;OAfvB,qBAAqB,CAoLjC;IAAD,4BAAC;CAAA;AApLiC;;;;;;;;;;;;ACXlC,yBAAyB,oBAAoB,OAAO,6BAA6B,wBAAwB,mBAAmB,sBAAsB,OAAO,uBAAuB,mBAAmB,OAAO,uBAAuB,wBAAwB,OAAO,O;;;;;;;;;;;ACAhQ,6YAA6Y,QAAQ,gMAAgM,UAAU,sMAAsM,aAAa,gMAAgM,UAAU,gMAAgM,UAAU,wMAAwM,cAAc,wMAAwM,cAAc,qOAAqO,QAAQ,yPAAyP,oDAAoD,QAAQ,ySAAyS,QAAQ,6MAA6M,6BAA6B,iH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArmF;AACa;AACrC;AACT;AACgD;AAOzF;IASE,gCAAoB,IAAgB,EAAS,MAAc,EAAS,MAAiB;QAAjE,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAW;QAPrF,uBAAkB,GAAG,CAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,EAAC,MAAM,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,QAAQ,EAAC,UAAU,CAAC,CAAC;IAQ9G,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAeC;QAZC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAM,cAAc,GAAuB,EAAE,CAAC;YAChD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC;YAEvH,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,cAAc,CAAC,CAAC;YAC3D,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,4CAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,yCAAQ,GAAR,UAAS,EAAE,EAAE,CAAC;QAAd,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,sCAAsC,GAAC,EAAE,EAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnE,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAM,cAAc,GAAuB,EAAE,CAAC;gBAC9C,GAAG,CAAC,CAAC,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAC,EAAE,EAAE,CAAC;oBAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,aAAa,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;gBAAC,CAAC;gBACvH,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,cAAc,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,6CAAY,GAAZ,UAAa,EAAU;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAsB,EACvD;YACG,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE;SAEV,CAAC,CAAC;QAEL,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAIb,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA3DwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;6DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;wDAAC;IAPvB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAU0B,+DAAU,EAAiB,sDAAM,EAAiB,2DAAS;OAT1E,sBAAsB,CAmElC;IAAD,6BAAC;CAAA;AAnEkC;AAuEnC,4BAA4B,GAAG;IAC7B,MAAM;QACJ,EAAE,EAAE,GAAG,CAAC,EAAE;QACV,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,OAAO,EAAE,GAAG,CAAC,OAAO;QACpB,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,IAAI,EAAE,GAAG,CAAC,gBAAgB,CAAC,IAAI;QAC/B,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ;QAC/B,QAAQ,EAAE,GAAG,CAAC,QAAQ;KACvB;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FwC;AACc;AACgC;AACQ;AACX;AACrB;AAK/D,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,EAAC;IAC1D,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,oGAAsB,EAAE,SAAS,EAAE,MAAM,EAAC;IAC7E,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4GAAwB,EAAE,SAAS,EAAE,MAAM,EAAC;IACjF,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,iGAAqB,EAAE,SAAS,EAAE,MAAM,EAAC;IAChF,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4EAAc,EAAE,SAAS,EAAE,MAAM,EAAC;CAC9D,CAAC;AAWA;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAR9B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;aAC9C;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3B/B,mB;;;;;;;;;;;ACAA,4C;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AAEA;AACe;AACF;AACmB;AAC1B;AACqB;AAEe;AACR;AACzB;AACsB;AACrB;AAC6B;AACH;AAkCnF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA3BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,qGAAwB;gBACxB,8FAAsB;gBACtB,2FAAqB;gBACrB,sEAAc;gBACd,mGAAuB;gBACvB,gGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4DAAY;gBACZ,4FAAuB;gBACvB,uFAAc;gBACd,2EAAgB;gBAChB,kEAAmB;gBACnB,sEAAgB;aACjB;YACD,eAAe,EAAE;gBACf,mGAAuB;gBACvB,gGAAsB;aACvB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnDtB,sCAAsC,sBAAsB,+BAA+B,OAAO,oCAAoC,oBAAoB,OAAO,qBAAqB,4CAA4C,OAAO,6BAA6B,4BAA4B,sBAAsB,gCAAgC,OAAO,C;;;;;;;;;;;ACA/V,0KAA0K,sBAAsB,IAAI,gBAAgB,uDAAuD,kBAAkB,gDAAgD,iBAAiB,+M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5S;AACA;AACE;AACb;AAOvC;IAGE,gCAAoB,IAAgB,EAAmC,IAAY;QAA/D,SAAI,GAAJ,IAAI,CAAY;QAAmC,SAAI,GAAJ,IAAI,CAAQ;IAAI,CAAC;IAExF,yCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,GAAC,IAAI,CAAC,IAAI,GAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YACxF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IAGH,CAAC;IAXU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;QAIuC,uEAAM,CAAC,iEAAe,CAAC;yCAApC,+DAAU;OAHzB,sBAAsB,CAYlC;IAAD,6BAAC;CAAA;AAZkC;;;;;;;;;;;;ACVnC,sCAAsC,sBAAsB,+BAA+B,OAAO,oCAAoC,oBAAoB,OAAO,C;;;;;;;;;;;ACAjK,uDAAuD,MAAM,yLAAyL,iBAAiB,6jB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7M;AACuB;AAE/B;AACE;AAOpD;IAOE,iCAAoB,EAAe,EAAU,IAAgB,EAAmC,IAAY;QAAxF,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAmC,SAAI,GAAJ,IAAI,CAAQ;QAHrG,SAAI,GAAG,SAAS,CAAC;IAGwF,CAAC;IAEjH,0CAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAClF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,+CAA+C,GAAC,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBACvF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,gCAAgC;gBAC9B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBACjC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,IAAI,0DAAW,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7D,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAC,IAAI,0DAAW,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpE,GAAG;gBACH,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;oBACxC,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,EAAC;wBAChC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;oBACrC,CAAC;oBAAA,IAAI,EAAC;wBACJ,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;oBAClC,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,+CAAa,GAAb;QAAA,iBAaC;QAZC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8CAA8C,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAClF,UAAC,IAAI;YACH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gBACxC,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,EAAC;oBAChC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;gBACrC,CAAC;gBAAA,IAAI,EAAC;oBACJ,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;gBAClC,CAAC;YACH,CAAC;QACH,CAAC,CACN,CAAC;IACJ,CAAC;IAjDU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;QAQgE,uEAAM,CAAC,iEAAe,CAAC;yCAA/D,0DAAW,EAAgB,+DAAU;OAPlD,uBAAuB,CAqDnC;IAAD,8BAAC;CAAA;AArDmC;;;;;;;;;;;;;;;;;;;;;;;;ACXK;AACU;AAoBxB;AA8C3B;IAAA;IAA8B,CAAC;IAAlB,cAAc;QA5C1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,gEAAY;gBACZ,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,oEAAkB;gBAClB,gEAAc;gBACd,+DAAa;gBACb,gEAAc;gBACd,iEAAe;gBACf,mEAAiB;gBACjB,qEAAmB;gBACnB,qEAAmB;gBACnB,mEAAiB;gBACjB,iEAAe;gBACf,oEAAkB;gBAClB,+DAAa;gBACb,gEAAc;aACf;YACD,OAAO,EAAE;gBACP,gEAAY;gBACZ,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,oEAAkB;gBAClB,gEAAc;gBACd,+DAAa;gBACb,gEAAc;gBACd,iEAAe;gBACf,mEAAiB;gBACjB,qEAAmB;gBACnB,qEAAmB;gBACnB,mEAAiB;gBACjB,iEAAe;gBACf,oEAAkB;gBAClB,+DAAa;gBACb,gEAAc;aACf;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnE3B,sCAAsC,mBAAmB,KAAK,kBAAkB,mBAAmB,4CAA4C,KAAK,K;;;;;;;;;;;ACApJ,4nCAA4nC,md;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1kC;AACqC;AAErC;AACF;AAOhD;IAGE,yBAAoB,kBAAsC,EAAU,IAAgB,EAAU,QAAqB;QAA/F,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAa;QADnH,cAAS,GAAgC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC,CAAC;IACwB,CAAC;IAEvH,kCAAQ,GAAR;IACA,CAAC;IAED,gCAAM,GAAN;QAAA,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC,SAAS,CACjE;YACE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,EAAC,OAAO,EAAC;gBACnD,QAAQ,EAAC,IAAI;aACd,CAAC;YACF,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAjBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAIwC,sEAAkB,EAAgB,+DAAU,EAAoB,6DAAW;OAHxG,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;;;;;;;;;;;;ACX5B,sCAAsC,sBAAsB,+BAA+B,OAAO,oCAAoC,oBAAoB,OAAO,2BAA2B,0BAA0B,0BAA0B,OAAO,+BAA+B,gCAAgC,OAAO,wBAAwB,+BAA+B,OAAO,kBAAkB,sBAAsB,OAAO,C;;;;;;;;;;;ACA1a,4vCAA4vC,aAAa,mYAAmY,qBAAqB,02BAA02B,umDAAumD,cAAc,+f;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9kI;AAC0C;AAC5C;AACE;AACT;AAOzC;IAQE,kCAAoB,EAAe,EACf,QAAqB,EACrB,IAAgB,EAChB,MAAc;QAHd,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAR3B,aAAQ,GAAG,EAAE,CAAC;IAQiB,CAAC;IAEvC,2CAAQ,GAAR;QAAA,iBAsCC;QAlCC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9D,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACpC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,OAAO,EAAE,IAAI,wDAAS,CAAC,EAAE,CAAC;YAC1B,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC1C,CAAC,CAAC;QAGH,IAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpD,CAAC,CAAC;QACS,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAGhD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC,SAAS,CAAC,cAAI;YACtE,KAAI,CAAC,QAAQ,GAAQ,IAAI,CAAC;QAE5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9D,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,4CAAS,GAAT;QACE,6DAA6D;QAC7D,qDAAqD;QAErD,IAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpD,CAAC,CAAC;QACS,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,+CAAY,GAAZ,UAAa,IAAI,EAAE,KAAK;QACtB,EAAE,EAAa,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,QAAQ,CAAa,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9G,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gCAAgC,EAAE,OAAO,EAAE;gBAC7D,QAAQ,EAAE,IAAI;aACd,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,iDAAc,GAAd,UAAe,EAAO,EAAE,KAAU;QAChC,IAAM,GAAG,GAAa,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAChE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC9B,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAED,2CAAQ,GAAR;QAAA,iBA2BC;QA1BC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;iBACrE,SAAS,CACR,cAAI;gBACF,IAAM,EAAE,GAAS,IAAK,CAAC,EAAE,CAAC;gBAE1B,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;gBAChC,GAAG,CAAC,CAAgB,UAAW,EAAX,UAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;oBAA1B,IAAM,KAAK;oBACd,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;iBAC7C;gBAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAsC,GAAG,EAAE,EAAE,QAAQ,CAAC;qBAClE,SAAS,CAAC;oBACT,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wDAAwD,EAAE,OAAO,EAAE;wBACpF,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACP,CAAC,CACF,CAAC;QACJ,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,EAAE,OAAO,EAAE;gBAC7D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC;IAEH,CAAC;IAED,gDAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACnC,CAAC;IArHU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCASwB,0DAAW;YACL,6DAAW;YACf,+DAAU;YACR,sDAAM;OAXvB,wBAAwB,CAyHpC;IAAD,+BAAC;CAAA;AAzHoC;;;;;;;;;;;;ACXrC,yBAAyB,oBAAoB,sBAAsB,OAAO,6BAA6B,wBAAwB,mBAAmB,sBAAsB,OAAO,oBAAoB,wBAAwB,OAAO,C;;;;;;;;;;;ACAlO,+ZAA+Z,QAAQ,oOAAoO,uBAAuB,sNAAsN,gBAAgB,kNAAkN,cAAc,4MAA4M,WAAW,2MAA2M,gUAAgU,0WAA0W,kCAAkC,QAAQ,sNAAsN,6BAA6B,6H;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv4E;AAC0B;AAClD;AAC0C;AAO5F;IASE,wBAAoB,IAAgB,EAAS,MAAiB,EAAU,QAAqB;QAAzE,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAP7F,uBAAkB,GAAG,CAAC,IAAI,EAAE,mBAAmB,EAAE,YAAY,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAOhB,CAAC;IAElG,iCAAQ,GAAR;QAAA,iBAcC;QAZC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAElB,IAAM,MAAM,GAAe,EAAE,CAAC;YAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC;YACtF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,MAAM,CAAC,CAAC;YACnD,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,qCAAY,GAAZ,UAAa,EAAU,EAAE,CAAC;QAExB,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAE,IAAI,CAAC,EAAC;YAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAuB,EACxD;gBACE,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,EAAE;aAET,CAAC,CAAC;YAEL,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAIb,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,OAAO,EAAE;gBAC9D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGD,uCAAc,GAAd,UAAe,EAAM,EAAC,KAAU,EAAE,CAAM;QAAxC,iBAiBC;QAhBC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAC;YACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,GAAC,EAAE,GAAC,GAAG,GAAC,KAAK,CAAC,OAAO,EAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChH,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBACtC,IAAM,MAAM,GAAe,EAAE,CAAC;gBAC9B,GAAG,CAAC,CAAC,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAC,EAAE,EAAE,CAAC;oBAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;gBAAC,CAAC;gBAEvF,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;gBAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8DAA8D,EAAE,OAAO,EAAE;gBAC1F,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;QAChC,CAAC;IACH,CAAC;IAED,wCAAe,GAAf,UAAgB,EAAM,EAAC,KAAU,EAAE,CAAK;QAAxC,iBAiBC;QAhBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,GAAC,EAAE,GAAC,YAAY,GAAC,KAAK,CAAC,OAAO,EAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/H,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;YACvC,IAAM,MAAM,GAAe,EAAE,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAC,EAAE,EAAE,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC;YAEvF,KAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,MAAM,CAAC,CAAC;YACnD,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;QACrC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+DAA+D,EAAE,OAAO,EAAE;gBAC3F,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAChC,CAAC,CACF,CAAC;IACF,CAAC;IA3FwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;qDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;gDAAC;IAPvB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAU0B,+DAAU,EAAiB,2DAAS,EAAoB,6DAAW;OATlF,cAAc,CAmG1B;IAAD,qBAAC;CAAA;AAnG0B;AAsG3B,oBAAoB,IAAI;IACtB,MAAM;QACJ,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;QACzC,UAAU,EAAE,IAAI,CAAC,SAAS;QAC1B,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;KACxB;AACH,CAAC;;;;;;;;;;;;;;AC1HD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 1000px;\\r\\n    margin: 20px auto;\\r\\n  }\\r\\n  \\r\\n  .mat-raised-button{\\r\\n    background-color: coral;\\r\\n  }\\r\\n  \\r\\n  mat-divider{\\r\\n    background-color:brown;\\r\\n  }\\r\\n  \\r\\n  .term{\\r\\n    padding: 10px;\\r\\n  }\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" style=\\\"margin-bottom: 20px\\\">\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter accomodation name\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter Country\\\" formControlName=\\\"country\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter City\\\" formControlName=\\\"city\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter Address\\\" formControlName=\\\"address\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n          <mat-form-field>\\n              <mat-select placeholder=\\\"Choose your accomodation type\\\" formControlName=\\\"accomodationType\\\">\\n                <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type.id\\\">\\n                  {{ type.type }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n            <mat-select placeholder=\\\"Choose your accomodation category\\\" formControlName=\\\"category\\\">\\n              <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n                {{ category.category }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"number\\\" matInput placeholder=\\\"Capacity\\\" formControlName=\\\"capacity\\\">\\n        </mat-form-field>\\n      </div>\\n      <br><br>\\n      <mat-divider></mat-divider>\\n      <div formArrayName=\\\"terms\\\">\\n        <h4>Your terms</h4>\\n        <button mat-raised-button type=\\\"button\\\"\\n        (click)=\\\"onAddTerm()\\\" [disabled]=\\\"!form.get('terms').valid\\\">Add term</button>\\n        <div class=\\\"form-group\\\"\\n        *ngFor=\\\"let termControl of form.get('terms').controls; let i = index\\\"> \\n          <div  [formGroupName]=\\\"i\\\">\\n            <mat-form-field class=\\\"term\\\">\\n              <input matInput [matDatepicker]=\\\"pickerFrom\\\" placeholder=\\\"From\\\" class=\\\"form-control\\\" formControlName=\\\"startDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #pickerFrom></mat-datepicker>    \\n            </mat-form-field>\\n            <mat-form-field class=\\\"term\\\">\\n              <input matInput [matDatepicker]=\\\"pickerTo\\\" placeholder=\\\"To\\\" class=\\\"form-control\\\" formControlName=\\\"endDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #pickerTo></mat-datepicker>\\n            </mat-form-field >\\n            <mat-form-field class=\\\"term\\\" >\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Price\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <div formArrayName=\\\"additionalServices\\\">\\n        <h4>Your additional services</h4>\\n        <div *ngFor=\\\"let service of services\\\">\\n         \\n            <mat-checkbox [checked]=\\\"service.test\\\" (change)=\\\"onServiceCheck(service.id, $event)\\\">{{service.name}}</mat-checkbox>\\n          \\n        </div>\\n      </div>\\n      <br>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <div>\\n        <h4>Your images:</h4>\\n        <input type=\\\"file\\\" multiple accept=\\\"image/*\\\" placeholder=\\\"Upload images\\\" (change)=\\\"onFileChanged($event)\\\">\\n      </div>\\n      <br>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <button mat-raised-button color=\\\"warn\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save changes</button>\\n    </form>\\n  </mat-card-content>\\n\\n \\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-accomodation',\n  templateUrl: './accomodation.component.html',\n  styleUrls: ['./accomodation.component.css']\n})\nexport class AccomodationComponent implements OnInit {\n\n  public form: FormGroup;\n  public services = [];\n  public types;\n  public categories;\n  public id;\n  public accomodation;\n  public terms;\n  private images: File[];\n\n  constructor(private fb: FormBuilder,\n              private snackBar: MatSnackBar,\n              private http: HttpClient,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id;\n\n    this.form = new FormGroup({\n      'name': new FormControl(null,Validators.required),\n      'country': new FormControl(null,Validators.required),\n      'city': new FormControl(null,Validators.required),\n      'address': new FormControl(null,Validators.required),\n      'accomodationType': new FormControl(null,Validators.required),\n      'category': new FormControl(null,Validators.required),\n      'description': new FormControl(null),\n      'capacity': new FormControl(null,Validators.required),\n      'terms': new FormArray([]),\n      'additionalServices': new FormControl([])\n    });\n    \n\n\n    \n\n\n    this.http.get('http://localhost:8081/additionalServices').subscribe(data => {\n      this.services = <any>data;\n      \n    });\n\n    this.http.get('http://localhost:8081/accomodationTypes').subscribe(data => {\n      this.types = data;\n    });\n\n    this.http.get('http://localhost:8081/categories').subscribe(data => {\n      this.categories = data;\n    });\n\n\n    this.http.get('http://localhost:8081/accomodations/'+this.id +'/terms').subscribe(data => {\n      this.terms = data;\n\n\n      this.http.get('http://localhost:8081/accomodations/'+this.id).subscribe(data => {\n        this.accomodation = data;\n\n        \n\n        let tempServices = [];\n        \n        this.form = new FormGroup({\n          'name': new FormControl(this.accomodation.name,Validators.required),\n          'country': new FormControl(this.accomodation.country,Validators.required),\n          'city': new FormControl(this.accomodation.city,Validators.required),\n          'address': new FormControl(this.accomodation.address,Validators.required),\n          'accomodationType': new FormControl(this.accomodation.accomodationType.id,Validators.required),\n          'category': new FormControl(this.accomodation.category.id,Validators.required),\n          'description': new FormControl(this.accomodation.description),\n          'capacity': new FormControl(this.accomodation.capacity,Validators.required),\n          'terms': new FormArray([]),\n          'additionalServices': new FormControl([])\n        });\n\n\n      let niz = <number[]>this.form.get('additionalServices').value;\n      for(let i=0; i<this.services.length;i++){\n        for(let j=0;j<this.accomodation.additionalServices.length;j++){\n          let tempSelectedService = this.accomodation.additionalServices[j];\n          let tempService =this.services[i];\n          if(tempService.id === tempSelectedService.id){\n            tempService.test = true;\n            niz.push(tempSelectedService.id);\n          }\n        }  \n      }\n\n      for(let i=0; i<this.terms.length;i++){\n        const group = new FormGroup({\n          'startDate': new FormControl(this.terms[i].startDate,Validators.required),\n          'endDate': new FormControl(this.terms[i].endDate,Validators.required),\n          'price': new FormControl(this.terms[i].price,Validators.required),\n          'reserved': new FormControl(this.terms[i].reserved),\n          'id' : new FormControl(this.terms[i].id),\n          'visited': new FormControl(this.terms[i].visited)\n        });\n        (<FormArray>this.form.get('terms')).push(group);\n      }\n\n      });\n    });\n    \n  }\n\n\n  onAddTerm(){\n    //const control = new FormControl(null,Validators.required);\n    //(<FormArray>this.form.get('terms')).push(control);\n\n    const group = new FormGroup({\n      'startDate': new FormControl(null,Validators.required),\n      'endDate': new FormControl(null,Validators.required),\n      'price': new FormControl(null,Validators.required),\n      'reserved': new FormControl(false),\n      'id' : new FormControl(null),\n      'visited': new FormControl(false)\n    });\n    (<FormArray>this.form.get('terms')).push(group);\n  }\n\n  // onTermReserve(term,event){\n  \n  //   (<FormArray>this.form.get('terms')).at((<FormArray>this.form.get('terms')).value.indexOf(term.value)).get('reserved').setValue(true);\n    \n    \n  // }\n\n  // onTermUnreserve(term,event){\n  \n  //   (<FormArray>this.form.get('terms')).at((<FormArray>this.form.get('terms')).value.indexOf(term.value)).get('reserved').setValue(false);\n    \n    \n  // }\n\n  onServiceCheck(id: any,event: any){\n    let niz = <number[]>this.form.get('additionalServices').value;\n    if(event.checked){\n      niz.push(id);\n    }else{\n      let index=niz.indexOf(id);\n      niz.splice(index,1);\n    }\n  }\n  \n  onSubmit(){\n   if(this.form.valid){\n      this.http.put('http://localhost:8081/accomodations/'+this.id,this.form.value)\n      .subscribe(\n        (data) => {\n          \n          const id = (<any>data).id;\n\n          const formData = new FormData();\n          if(this.images != null){\n          for (const image of this.images) {\n            formData.append('image', image, image.name);\n          }\n\n          this.http.post('http://localhost:8081/accomodations/' + id, formData)\n            .subscribe(() => {\n              this.snackBar.open('Accomodation successfully modified.', 'Close', {\n                duration: 2000\n              });\n              this.router.navigate(['']);\n            });\n          }\n          this.router.navigate(['']);\n        }\n      );\n    }\n\n  }\n\n\n  onFileChanged(event) {\n    this.images = event.target.files;\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 80%;\\r\\n    padding: 20px;\\r\\n  }\\r\\n  \\r\\n  /* td, th {\\r\\n    width: 25%;\\r\\n  } */\\r\\n  \\r\\n  .cursor{\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \"","module.exports = \"<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"myDataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"country\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.country}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"city\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> City </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.city}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.type}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"category\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.category}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"capacity\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Capacity </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.capacity}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"manage\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Editing </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"cursor\\\"> <mat-icon id=\\\"{{row.id}}\\\" mat-list-icon [routerLink]=\\\"[row.id]\\\">edit</mat-icon> </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"remove\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Remove </th>\\n      <td mat-cell *matCellDef=\\\"let row; let i = index\\\" class=\\\"cursor\\\"> <mat-icon id=\\\"{{row.id}}\\\" mat-list-icon (click)=\\\"onRemove(row.id, i)\\\">delete</mat-icon> </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"comments\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Comments </th>\\n      <td class=\\\"cursor\\\" mat-cell *matCellDef=\\\"let row\\\"><mat-icon id=\\\"{{row.id}}\\\" mat-list-icon (click)=\\\"onOpenDialog(row.id)\\\">comment</mat-icon></td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"myDisplayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: myDisplayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource, MatDialog} from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { CommentDialogComponent } from 'src/app/comment-dialog/comment-dialog.component';\n\n@Component({\n  selector: 'app-accomodations',\n  templateUrl: './accomodations.component.html',\n  styleUrls: ['./accomodations.component.css']\n})\nexport class AccomodationsComponent implements OnInit {\n  \n  myDisplayedColumns = ['id','name','country','city','type','category','capacity','manage','remove','comments'];\n  myDataSource: MatTableDataSource<AccomodationData>;\n  public accomodations;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private http: HttpClient,private router: Router,private dialog: MatDialog) {   \n  }\n\n  ngOnInit() {\n    \n\n    this.http.get('http://localhost:8081/accomodations').subscribe(data => {\n      this.accomodations = data;\n\n      const accomodationsD: AccomodationData[] = [];\n    for (let i = 0; i < this.accomodations.length; i++) { accomodationsD.push(createAccomodation(this.accomodations[i])); }\n\n    this.myDataSource = new MatTableDataSource(accomodationsD);\n    this.myDataSource.paginator = this.paginator;\n    this.myDataSource.sort = this.sort;\n    });\n\n    \n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.myDataSource.filter = filterValue;\n    if (this.myDataSource.paginator) {\n      this.myDataSource.paginator.firstPage();\n    }\n  }\n\n  onRemove(id, i){\n    this.http.delete('http://localhost:8081/accomodations/'+id,{ responseType: 'text' }).subscribe(data => {\n      this.http.get('http://localhost:8081/accomodations').subscribe(data => {\n      this.accomodations = data;\n      const accomodationsD: AccomodationData[] = [];\n      for (let i = 0; i < this.accomodations.length; i++) { accomodationsD.push(createAccomodation(this.accomodations[i])); }\n      this.myDataSource = new MatTableDataSource(accomodationsD);\n      });\n    });\n  }\n\n\n  onOpenDialog(id: number){\n    const dialogRef = this.dialog.open(CommentDialogComponent, \n      {\n         width: '750px',\n         data: id\n    \n      });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        \n        \n        \n      }\n    });\n  }\n\n}\n\n\n\nfunction createAccomodation(acc): AccomodationData{\n  return{\n    id: acc.id,\n    name: acc.name,\n    country: acc.country,\n    city: acc.city,\n    type: acc.accomodationType.type,\n    category: acc.category.category,\n    capacity: acc.capacity\n  }\n}\n\nexport interface AccomodationData{\n  id: string;\n  name: string;\n  country: string;\n  city: string;\n  type: string;\n  category: string;\n  capacity: number;\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AccomodationsComponent } from 'src/app/accomodations/accomodations.component';\r\nimport { NewAccomodationComponent } from 'src/app/new-accomodation/new-accomodation.component';\r\nimport { AccomodationComponent } from 'src/app/accomodation/accomodation.component';\r\nimport { TermsComponent } from 'src/app/terms/terms.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'accomodations', pathMatch: 'full'},\r\n  {path: 'accomodations', component: AccomodationsComponent, pathMatch: 'full'},\r\n  {path: 'newaccomodation', component: NewAccomodationComponent, pathMatch: 'full'},\r\n  {path: 'accomodations/:id', component: AccomodationComponent, pathMatch: 'full'},\r\n  {path: 'terms', component: TermsComponent, pathMatch: 'full'}\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n      RouterModule.forRoot(routes, {useHash: true})\r\n    ],\r\n    exports: [\r\n      RouterModule\r\n    ]\r\n  })\r\n  export class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/modules/material/material.module';\n\nimport { NewAccomodationComponent } from './new-accomodation/new-accomodation.component';\nimport { AccomodationsComponent } from './accomodations/accomodations.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AccomodationComponent } from './accomodation/accomodation.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { MessagesDialogComponent } from './messages-dialog/messages-dialog.component';\nimport { CommentDialogComponent } from './comment-dialog/comment-dialog.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    NewAccomodationComponent,\n    AccomodationsComponent,\n    AccomodationComponent,\n    TermsComponent,\n    MessagesDialogComponent,\n    CommentDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    MessagesDialogComponent,\n    CommentDialogComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-card{\\r\\n    background-color: rgb(233, 170, 94);\\r\\n  }\\r\\n  \\r\\n  mat-card-content{\\r\\n    border-radius: 25px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid black;\\r\\n  }\"","module.exports = \"<h2 mat-dialog-title>Comments</h2>\\n\\n<mat-dialog-content>\\n  <div *ngFor = \\\"let comment of comments\\\">\\n    <mat-card>\\n      <mat-card-title>Rated {{comment.accomodation}}: {{comment.rating}}/10</mat-card-title>\\n      <mat-card-subtitle>From: {{comment.username}}</mat-card-subtitle>\\n      <mat-card-content>{{comment.comment}}</mat-card-content>\\n    </mat-card>\\n    <br>\\n  </div>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button mat-dialog-close mat-raised-button color=\\\"primary\\\">Exit</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-comment-dialog',\n  templateUrl: './comment-dialog.component.html',\n  styleUrls: ['./comment-dialog.component.css']\n})\nexport class CommentDialogComponent implements OnInit {\n  public comments;\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) private data: number) { }\n\n  ngOnInit() {\n    this.http.get('http://localhost:8081/accomodations/'+this.data+'/comments').subscribe(data => {\n      this.comments = data;\n  });\n\n\n  }\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<h2 mat-dialog-title>Messages from {{user}}</h2>\\n\\n<mat-dialog-content>\\n  <mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\n    <mat-chip *ngFor=\\\"let message of messages\\\" selected=\\\"true\\\" [color]=\\\"message.color\\\">\\n      {{message.message}}\\n    </mat-chip>\\n  </mat-chip-list>\\n  <br>\\n  <br>\\n  <div [formGroup]=\\\"form\\\" class=\\\"example-container\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Message content\\\" formControlName=\\\"message\\\">\\n      <mat-error>Invalid message</mat-error>\\n    </mat-form-field>\\n  </div>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button [disabled]=\\\"!form.valid\\\"  mat-raised-button color=\\\"primary\\\" (click)=\\\"onSendMessage()\\\" >Send message</button>\\n  <button mat-dialog-close mat-raised-button color=\\\"primary\\\">Exit</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormControl, Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { validateVerticalPosition } from '@angular/cdk/overlay';\nimport { HttpClient } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-messages-dialog',\n  templateUrl: './messages-dialog.component.html',\n  styleUrls: ['./messages-dialog.component.css']\n})\nexport class MessagesDialogComponent implements OnInit {\n\n  public form: FormGroup;\n  public messages: any;\n  public user = \"no user\";\n  public term;\n\n  constructor(private fb: FormBuilder, private http: HttpClient, @Inject(MAT_DIALOG_DATA) private data: number) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      message: ['', [Validators.required]]\n    });\n\n    this.http.get('http://localhost:8081/accomodations/terms/'+this.data).subscribe(data => {\n      this.term = data;\n        this.http.get('http://localhost:8081/accomodations/messages/'+this.data).subscribe(data => {\n        this.messages = data;\n        //if(this.messages.length != 0){\n          this.user = this.term.user.email;\n          this.form.addControl(\"termId\",new FormControl(this.term.id));\n          this.form.addControl(\"userId\",new FormControl(this.term.user.id));\n        //}\n        for(let i=0; i<this.messages.length; i++){\n          if(this.messages[i].user != null){\n            this.messages[i].color = 'primary';\n          }else{\n            this.messages[i].color = 'warn';\n          }\n        }\n      });\n    });\n\n    \n  }\n \n  onSendMessage(){\n    this.http.post('http://localhost:8081/accomodations/messages',this.form.value).subscribe(\n          (data) => {\n            this.messages.push(data);\n            for(let i=0; i<this.messages.length; i++){\n              if(this.messages[i].user != null){\n                this.messages[i].color = 'primary';\n              }else{\n                this.messages[i].color = 'warn';\n              }\n            }\n          }\n    );\n  }\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule,\n  MatChipsModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatCheckboxModule,\n  MatSelectModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatTableModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n  ],\n  exports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \".sidenav-container {\\n    height: 100%;\\n  }\\n  \\n  .sidenav {\\n    width: 200px;\\n    box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n  }\\n  \"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset | async)!.matches ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset | async)!.matches\\\">\\n\\n    <mat-toolbar color=\\\"warn\\\">Menu</mat-toolbar>\\n\\n    <mat-nav-list>\\n      <mat-list-item routerLink=\\\"/accomodations\\\">\\n        <mat-icon mat-list-icon>home</mat-icon>\\n        <p matLine>Accomodations</p>\\n      </mat-list-item>\\n      <mat-list-item routerLink=\\\"/newaccomodation\\\">\\n        <mat-icon mat-list-icon>input</mat-icon>\\n        <p matLine>Add accomodation</p>\\n      </mat-list-item>\\n      <mat-list-item routerLink=\\\"/terms\\\">\\n        <mat-icon mat-list-icon>menu</mat-icon>\\n        <p matLine>Manage reservations</p>\\n      </mat-list-item>\\n      <mat-list-item (click)=\\\"onSync()\\\">\\n        <mat-icon mat-list-icon>sync</mat-icon>\\n        <p matLine>Sync data</p>\\n      </mat-list-item>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content style=\\\"background: rgb(249, 249, 250);\\\">\\n    <mat-toolbar color=\\\"warn\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"(isHandset | async)!.matches\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Agent application</span>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n  constructor(private breakpointObserver: BreakpointObserver, private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n  }\n\n  onSync(){\n    this.http.get('http://localhost:8081/accomodations/sync').subscribe(\n      () =>{\n        this.snackBar.open('Data synced with server','Close',{\n          duration:2000\n        })\n        window.location.reload();\n      }\n    );\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 1000px;\\r\\n    margin: 20px auto;\\r\\n  }\\r\\n  \\r\\n  .mat-raised-button{\\r\\n    background-color: coral;\\r\\n  }\\r\\n  \\r\\n  mat-divider{\\r\\n    background-color:brown;\\r\\n  }\\r\\n  \\r\\n  .term{\\r\\n    padding: 10px;\\r\\n  }\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" style=\\\"margin-bottom: 20px\\\">\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter accomodation name\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter Country\\\" formControlName=\\\"country\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter City\\\" formControlName=\\\"city\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Enter Address\\\" formControlName=\\\"address\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n          <mat-form-field>\\n              <mat-select placeholder=\\\"Choose your accomodation type\\\" formControlName=\\\"accomodationType\\\">\\n                <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type.id\\\">\\n                  {{ type.type }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n            <mat-select placeholder=\\\"Choose your accomodation category\\\" formControlName=\\\"category\\\">\\n              <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n                {{ category.category }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"example-container\\\">\\n        <mat-form-field>\\n          <input type=\\\"number\\\" matInput placeholder=\\\"Capacity\\\" formControlName=\\\"capacity\\\">\\n        </mat-form-field>\\n      </div>\\n      <br><br>\\n      <mat-divider></mat-divider>\\n      <div formArrayName=\\\"terms\\\">\\n        <h4>Your terms</h4>\\n        <button mat-raised-button type=\\\"button\\\"\\n        (click)=\\\"onAddTerm()\\\" [disabled]=\\\"!form.get('terms').valid\\\">Add term</button>\\n        <div class=\\\"form-group\\\"\\n        *ngFor=\\\"let termControl of form.get('terms').controls; let i = index\\\">\\n          <div [formGroupName]=\\\"i\\\">\\n            <mat-form-field class=\\\"term\\\">\\n              <input  matInput [matDatepicker]=\\\"pickerFrom\\\" placeholder=\\\"From\\\" class=\\\"form-control\\\" formControlName=\\\"startDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #pickerFrom></mat-datepicker>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"term\\\">\\n              <input  matInput [matDatepicker]=\\\"pickerTo\\\" placeholder=\\\"To\\\" class=\\\"form-control\\\" formControlName=\\\"endDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #pickerTo></mat-datepicker>\\n            </mat-form-field >\\n            <mat-form-field class=\\\"term\\\">\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Price\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\">\\n            </mat-form-field>\\n            <mat-form-field class=\\\"term\\\" color=\\\"warn\\\" appearance=\\\"outline\\\">\\n              <mat-chip-list>\\n\\n                <mat-chip class=\\\"form-control\\\" color=\\\"warn\\\" selected=\\\"true\\\" (click)=\\\"onTermRemove(termControl,$event)\\\">Remove</mat-chip>\\n\\n              </mat-chip-list>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <div formArrayName=\\\"additionalServices\\\">\\n        <h4>Your additional services</h4>\\n        <div *ngFor=\\\"let service of services\\\">\\n\\n            <mat-checkbox (change)=\\\"onServiceCheck(service.id, $event)\\\">{{service.name}}</mat-checkbox>\\n\\n        </div>\\n      </div>\\n      <br>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <div>\\n        <h4>Your images:</h4>\\n        <input type=\\\"file\\\" multiple accept=\\\"image/*\\\" placeholder=\\\"Upload images\\\" (change)=\\\"onFileChanged($event)\\\">\\n      </div>\\n      <br>\\n      <mat-divider></mat-divider>\\n      <br>\\n      <button mat-raised-button color=\\\"warn\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Add</button>\\n    </form>\\n\\n  </mat-card-content>\\n\\n\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-accomodation',\n  templateUrl: './new-accomodation.component.html',\n  styleUrls: ['./new-accomodation.component.css']\n})\nexport class NewAccomodationComponent implements OnInit {\n\n  public form: FormGroup;\n  public services = [];\n  public types;\n  public categories;\n  private images: File[];\n\n  constructor(private fb: FormBuilder,\n              private snackBar: MatSnackBar,\n              private http: HttpClient,\n              private router: Router) { }\n\n  ngOnInit() {\n\n\n\n    this.form = new FormGroup({\n      'name': new FormControl(null, Validators.required),\n      'country': new FormControl(null, Validators.required),\n      'city': new FormControl(null, Validators.required),\n      'address': new FormControl(null, Validators.required),\n      'accomodationType': new FormControl(null, Validators.required),\n      'category': new FormControl(null, Validators.required),\n      'description': new FormControl(null),\n      'capacity': new FormControl(null, Validators.required),\n      'terms': new FormArray([]),\n      'additionalServices': new FormControl([])\n    });\n\n\n    const group = new FormGroup({\n      'startDate': new FormControl(null, Validators.required),\n      'endDate': new FormControl(null, Validators.required),\n      'price': new FormControl(null, Validators.required),\n    });\n    (<FormArray>this.form.get('terms')).push(group);\n\n\n    this.http.get('http://localhost:8081/additionalServices').subscribe(data => {\n      this.services = <any>data;\n\n    });\n\n    this.http.get('http://localhost:8081/accomodationTypes').subscribe(data => {\n      this.types = data;\n    });\n\n    this.http.get('http://localhost:8081/categories').subscribe(data => {\n      this.categories = data;\n    });\n  }\n\n\n  onAddTerm() {\n    // const control = new FormControl(null,Validators.required);\n    // (<FormArray>this.form.get('terms')).push(control);\n\n    const group = new FormGroup({\n      'startDate': new FormControl(null, Validators.required),\n      'endDate': new FormControl(null, Validators.required),\n      'price': new FormControl(null, Validators.required),\n    });\n    (<FormArray>this.form.get('terms')).push(group);\n  }\n\n  onTermRemove(term, event) {\n    if((<FormArray>this.form.get('terms')).length > 1){\n      (<FormArray>this.form.get('terms')).removeAt((<FormArray>this.form.get('terms')).value.indexOf(term.value));\n    }else{\n      this.snackBar.open('There must be at least 1 term!', 'Close', {\n       duration: 2000      \n      });\n    }\n  }\n\n  onServiceCheck(id: any, event: any) {\n    const niz = <number[]>this.form.get('additionalServices').value;\n    if (event.checked) {\n      niz.push(id);\n    } else {\n      const index = niz.indexOf(id);\n      niz.splice(index, 1);\n    }\n  }\n\n  onSubmit() {\n    if (this.form.valid && this.images != null) {\n      this.http.post('http://localhost:8081/accomodations', this.form.value)\n      .subscribe(\n        data => {\n          const id = (<any>data).id;\n\n          const formData = new FormData();\n          for (const image of this.images) {\n            formData.append('image', image, image.name);\n          }\n\n          this.http.post('http://localhost:8081/accomodations/' + id, formData)\n            .subscribe(() => {\n              this.snackBar.open('Adding accomodation and uploading images, please wait.', 'Close', {\n                duration: 2000\n              });\n              this.router.navigate(['']);\n            });\n        }\n      );\n    }else{\n      this.snackBar.open('You must add atleast 1 picture!', 'Close', {\n        duration: 2000\n      });\n    }\n\n  }\n\n  onFileChanged(event) {\n    this.images = event.target.files;\n  }\n\n\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n    padding: 20px;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 80%;\\r\\n    padding: 20px;\\r\\n  }\\r\\n  \\r\\n  .cursor{\\r\\n    cursor: pointer;\\r\\n  }\"","module.exports = \"<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"myDataSource\\\" matSort>\\n  \\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"accomodation_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Accomodation name </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accomodation_name}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"start_date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Start date </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.start_date}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"end_date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> End date </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.end_date}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"price\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.price}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"visited\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Visited </th>\\n        <td mat-cell *matCellDef=\\\"let row; let i=index\\\"><mat-checkbox [checked]=\\\"row.visited\\\" (change)=\\\"onVisitedCheck(row.id, $event, i)\\\"></mat-checkbox></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"reserved\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Reserved </th>\\n        <td mat-cell *matCellDef=\\\"let row ; let i = index\\\"><mat-checkbox [disabled]=\\\"row.reserved\\\" [checked]=\\\"row.reserved\\\" (change)=\\\"onReservedCheck(row.id, $event, i)\\\"></mat-checkbox></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"inbox\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Inbox </th>\\n        <td class=\\\"cursor\\\" mat-cell *matCellDef=\\\"let row; let i = index\\\"><mat-icon id=\\\"{{row.id}}\\\" mat-list-icon (click)=\\\"onOpenDialog(row.id, i)\\\">inbox</mat-icon></td>\\n      </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"myDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: myDisplayedColumns;\\\">\\n      </tr>\\n    </table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n  \"","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource, MatDialog, MatSnackBar} from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { MessagesDialogComponent } from 'src/app/messages-dialog/messages-dialog.component';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  myDisplayedColumns = ['id', 'accomodation_name', 'start_date','end_date','price','visited', 'reserved' ,'inbox'];\n  myDataSource: MatTableDataSource<TermData>;\n  public terms;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private http: HttpClient,private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n\n    this.http.get('http://localhost:8081/accomodations/visited').subscribe(data => {\n      this.terms = data;\n\n      const termsD: TermData[] = [];\n    for (let i = 0; i < this.terms.length; i++) { termsD.push(createTerm(this.terms[i]));}\n    console.log(termsD);\n\n    this.myDataSource = new MatTableDataSource(termsD);\n    this.myDataSource.paginator = this.paginator;\n    this.myDataSource.sort = this.sort;\n    });\n\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.myDataSource.filter = filterValue;\n    if (this.myDataSource.paginator) {\n      this.myDataSource.paginator.firstPage();\n    }\n  }\n\n  onOpenDialog(id: number, i){\n    \n    if(this.terms[i].user!=null){\n      const dialogRef = this.dialog.open(MessagesDialogComponent, \n        {\n          width: '450px',\n          data: id\n      \n        });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          \n          \n          \n        }\n      });\n    }else{\n      this.snackBar.open('This term has not been reserved!', 'Close', {\n        duration: 3000\n      });\n    }\n  }\n  \n\n  onVisitedCheck(id:any,event: any, i: any){\n    if(this.terms[i].reserved){\n      this.http.get('http://localhost:8081/accomodations/'+id+'/'+event.checked,{ responseType: 'text' }).subscribe(data => {\n        this.terms[i].visited = event.checked;\n        const termsD: TermData[] = [];\n        for (let i = 0; i < this.terms.length; i++) { termsD.push(createTerm(this.terms[i])); }\n    \n        this.myDataSource = new MatTableDataSource(termsD);\n        this.myDataSource.paginator = this.paginator;\n        this.myDataSource.sort = this.sort;\n      });\n    }else{\n      this.snackBar.open('You cannot set a term to visited if it has not been reserved', 'Close', {\n        duration: 3000\n      });\n      this.terms[i].visited = false;\n    }\n  }\n\n  onReservedCheck(id:any,event: any, i:any){\n    this.http.get('http://localhost:8081/accomodations/terms/'+id+'/reserved/'+event.checked,{ responseType: 'text' }).subscribe(data => {\n      this.terms[i].reserved = event.checked;\n      const termsD: TermData[] = [];\n      for (let i = 0; i < this.terms.length; i++) { termsD.push(createTerm(this.terms[i])); }\n  \n      this.myDataSource = new MatTableDataSource(termsD);\n      this.myDataSource.paginator = this.paginator;\n      this.myDataSource.sort = this.sort;\n    },\n    error => {\n      this.snackBar.open('Error reserving a term, Term is already reserved by a user!!!', 'Close', {\n        duration: 4000\n      });\n      this.terms[i].reserved = true;\n    }\n  );\n  }\n\n}\n\n\nfunction createTerm(term): TermData{\n  return{\n    id: term.id,\n    accomodation_name: term.accomodation.name,\n    start_date: term.startDate,\n    end_date: term.endDate,\n    price: term.price,\n    visited: term.visited,\n    reserved: term.reserved\n  }\n}\n\n\nexport interface TermData{\n  id: number;\n  accomodation_name: string;\n  start_date: string;\n  end_date: string;\n  price: number;\n  reserved : boolean;\n  visited: boolean;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}